{"ast":null,"code":"export default {\n  name: 'App',\n  data() {\n    return {\n      //isSignUpActive: false,\n      activePanel: 'login',\n      signup: {\n        phone: '',\n        password: '',\n        verificationCode: ''\n      },\n      login: {\n        account: '',\n        password: ''\n      }\n    };\n  },\n  methods: {\n    togglePanel(panel) {\n      this.activePanel = panel;\n    },\n    handleSignUp() {\n      const {\n        phone,\n        password,\n        verificationCode\n      } = this.signup;\n      if (phone && password && verificationCode) {\n        fetch('/api/sign', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            phoneNumber: phone,\n            password,\n            verificationCode\n          })\n        }).then(response => response.json()).then(data => {\n          if (data.success) {\n            alert('注册成功！');\n            // 可以重定向到登录页面或其他页面\n            window.location.href = '/login';\n          } else {\n            alert('注册失败，请检查您的信息。');\n          }\n        }).catch(error => {\n          console.error('Error:', error);\n          alert('网络错误，请检查您的连接。');\n        });\n      } else {\n        alert('请填写所有必填项！');\n      }\n    },\n    handleLogin() {\n      const {\n        account,\n        password\n      } = this.login;\n      if (account && password) {\n        fetch('/api/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            accountName: account,\n            password\n          })\n        }).then(response => response.json()).then(data => {\n          if (data.success) {\n            alert('登录成功！');\n            // 可以重定向到主页或其他页面\n            window.location.href = '/home.vue';\n          } else {\n            alert('登录失败，请检查您的信息。');\n          }\n        }).catch(error => {\n          console.error('Error:', error);\n          alert('网络错误，请检查您的连接。');\n        });\n      } else {\n        alert('请填写所有必填项！');\n      }\n    },\n    requestVerificationCode() {\n      const {\n        phone\n      } = this.signup;\n      if (phone) {\n        fetch('https://your-backend-api-url/send-verification-code', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            phoneNumber: phone\n          })\n        }).then(response => response.json()).then(data => {\n          if (data.success) {\n            alert('验证码已发送，请查收！');\n          } else {\n            alert('发送验证码失败，请稍后再试。');\n          }\n        }).catch(error => {\n          console.error('Error:', error);\n          alert('网络错误，请检查您的连接。');\n        });\n      } else {\n        alert('请输入手机号码！');\n      }\n    }\n    /*    goToResetPassword() {\r\n          window.location.href = \"/resetPassWord\"; // 跳转到重置密码页面\r\n        }*/\n  }\n};","map":{"version":3,"names":["name","data","activePanel","signup","phone","password","verificationCode","login","account","methods","togglePanel","panel","handleSignUp","fetch","method","headers","body","JSON","stringify","phoneNumber","then","response","json","success","alert","window","location","href","catch","error","console","handleLogin","accountName","requestVerificationCode"],"sources":["C:\\Users\\zsx\\Desktop\\v\\hosptial-vue\\vue\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div class=\"container right-panel-active\" id=\"app\">\r\n    <!-- 注册 -->\r\n    <div class=\"container__form container--signup\" :class=\"{'active': activePanel === 'register'}\">\r\n      <form @submit.prevent=\"handleSignUp\" class=\"form\" id=\"form1\">\r\n        <h2 class=\"form__title\">注册账号</h2>\r\n        <input v-model=\"signup.phone\" type=\"text\" placeholder=\"手机号\" class=\"input\" />\r\n        <input v-model=\"signup.password\" type=\"password\" placeholder=\"设置密码\" class=\"input\" />\r\n        <input v-model=\"signup.verificationCode\" type=\"text\" placeholder=\"验证码\" class=\"input\" />\r\n        <span class=\"get-verification-code\" @click=\"requestVerificationCode\">获取验证码</span>\r\n        <button type=\"button\" @click=\"togglePanel('login')\" class=\"btn\">登录账号</button>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- 登录 -->\r\n    <div class=\"container__form container--signin\" :class=\"{'active': activePanel === 'login'}\">\r\n      <form @submit.prevent=\"handleLogin\" class=\"form\" id=\"form2\">\r\n        <h2 class=\"form__title\">登录账号</h2>\r\n        <input v-model=\"login.account\" type=\"text\" placeholder=\"用户名/手机号\" class=\"input\" />\r\n        <input v-model=\"login.password\" type=\"password\" placeholder=\"密码\" class=\"input\" />\r\n        <a href=\"#\" class=\"link\" id=\"forgetPassword\">忘记密码?</a>\r\n        <button type=\"button\" @click=\"togglePanel('register')\" class=\"btn\">注册账号</button>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- 覆盖层 -->\r\n    <div class=\"container__overlay\" @click=\"togglePanel('none')\">\r\n      <div class=\"overlay\">\r\n        <div class=\"overlay__panel overlay--left\" :class=\"{'active': activePanel === 'login'}\">\r\n          <button class=\"btn\" @click=\"togglePanel('login')\">登录账号</button>\r\n        </div>\r\n        <div class=\"overlay__panel overlay--right\" :class=\"{'active': activePanel === 'register'}\">\r\n          <button class=\"btn\" @click=\"togglePanel('register')\">注册账号</button>\r\n        </div>\r\n      </div>\r\n    </div>  \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'App',\r\n  data() {\r\n    return {\r\n      //isSignUpActive: false,\r\n      activePanel: 'login',\r\n      signup: {\r\n        phone: '',\r\n        password: '',\r\n        verificationCode: ''\r\n      },\r\n      login: {\r\n        account: '',\r\n        password: ''\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    togglePanel(panel) {\r\n      this.activePanel = panel;\r\n    },\r\n    handleSignUp() {\r\n      const { phone, password, verificationCode } = this.signup;\r\n      if (phone && password && verificationCode) {\r\n        fetch('/api/sign', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            phoneNumber: phone,\r\n            password,\r\n            verificationCode\r\n          })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n              if (data.success) {\r\n                alert('注册成功！');\r\n                // 可以重定向到登录页面或其他页面\r\n                window.location.href = '/login';\r\n              } else {\r\n                alert('注册失败，请检查您的信息。');\r\n              }\r\n            })\r\n            .catch(error => {\r\n              console.error('Error:', error);\r\n              alert('网络错误，请检查您的连接。');\r\n            });\r\n      } else {\r\n        alert('请填写所有必填项！');\r\n      }\r\n    },\r\n    handleLogin() {\r\n      const { account, password } = this.login;\r\n      if (account && password) {\r\n        fetch('/api/login', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            accountName: account,\r\n            password,\r\n          })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n              if (data.success) {\r\n                alert('登录成功！');\r\n                // 可以重定向到主页或其他页面\r\n                window.location.href = '/home.vue';\r\n              } else {\r\n                alert('登录失败，请检查您的信息。');\r\n              }\r\n            })\r\n            .catch(error => {\r\n              console.error('Error:', error);\r\n              alert('网络错误，请检查您的连接。');\r\n            });\r\n      } else {\r\n        alert('请填写所有必填项！');\r\n      }\r\n    },\r\n    requestVerificationCode() {\r\n      const { phone } = this.signup;\r\n      if (phone) {\r\n        fetch('https://your-backend-api-url/send-verification-code', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ phoneNumber: phone })\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n              if (data.success) {\r\n                alert('验证码已发送，请查收！');\r\n              } else {\r\n                alert('发送验证码失败，请稍后再试。');\r\n              }\r\n            })\r\n            .catch(error => {\r\n              console.error('Error:', error);\r\n              alert('网络错误，请检查您的连接。');\r\n            });\r\n      } else {\r\n        alert('请输入手机号码！');\r\n      }\r\n    },\r\n/*    goToResetPassword() {\r\n      window.location.href = \"/resetPassWord\"; // 跳转到重置密码页面\r\n    }*/\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n:root {\r\n  /* COLORS */\r\n  --white: #F5F7FF;\r\n  --gray: #333;\r\n  --blue: #3161FF;\r\n  --lightblue: #3161F2;\r\n\r\n  /* RADII */\r\n  --button-radius: 0.7rem;\r\n\r\n  /* SIZES */\r\n  --max-width: 700px;\r\n  --max-height: 373px;\r\n\r\n  font-size: 16px;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\r\n  Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\r\n}\r\ntemplate {\r\n  align-items: center;\r\n  background-color: var(--white);\r\n  background-attachment: fixed;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  display: grid;\r\n  height: 100vh;\r\n  place-items: center;\r\n}\r\n\r\n.form__title {\r\n  font-weight: 300;\r\n  margin: 0;\r\n  margin-bottom: 1.25rem;\r\n}\r\n\r\n.link {\r\n  color: var(--blue);\r\n  font-size: 0.9rem;\r\n  margin: 1.5rem 0;\r\n  text-decoration: none;\r\n}\r\n.link:hover {\r\n  text-decoration: underline; /* 鼠标悬停时添加下划线 */\r\n}\r\n\r\n.container {\r\n  background-color: var(--white);\r\n  border-radius: var(--button-radius);\r\n  box-shadow: 0 0.9rem 1.7rem rgba(0, 0, 0, 0.25),\r\n  0 0.7rem 0.7rem rgba(0, 0, 0, 0.22);\r\n  height: var(--max-height);\r\n  max-width: var(--max-width);\r\n  overflow: hidden;\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n\r\n.container__form {\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  transition: all 0.6s ease-in-out;\r\n}\r\n\r\n.container--signin {\r\n  left: 0;\r\n  width: 50%;\r\n  z-index: 2;\r\n}\r\n\r\n.container.right-panel-active .container--signin {\r\n  transform: translateX(100%);\r\n}\r\n\r\n.container--signup {\r\n  left: 0;\r\n  opacity: 0;\r\n  width: 50%;\r\n  z-index: 1;\r\n}\r\n\r\n.container.right-panel-active .container--signup {\r\n  animation: show 0.6s;\r\n  opacity: 1;\r\n  transform: translateX(100%);\r\n  z-index: 5;\r\n}\r\n\r\n.container__overlay {\r\n  height: 100%;\r\n  left: 50%;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  top: 0;\r\n  transition: transform 0.6s ease-in-out;\r\n  width: 50%;\r\n  z-index: 100;\r\n}\r\n\r\n.container.right-panel-active .container__overlay {\r\n  transform: translateX(-100%);\r\n}\r\n\r\n.overlay {\r\n  background-color: var(--lightblue);\r\n  background: url(\"http://localhost:63342/hosptial-vue/vue/public/images/background1.jpg\");\r\n  background-attachment: fixed;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  height: 100%;\r\n  left: -100%;\r\n  position: relative;\r\n  transform: translateX(0);\r\n  transition: transform 0.6s ease-in-out;\r\n  width: 200%;\r\n} \r\n\r\n.container.right-panel-active .overlay {\r\n  transform: translateX(50%);\r\n}\r\n\r\n.overlay__panel {\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  justify-content: center;\r\n  position: absolute;\r\n  text-align: center;\r\n  top: 0;\r\n  transform: translateX(0);\r\n  transition: transform 0.6s ease-in-out;\r\n  width: 50%;\r\n}\r\n\r\n.overlay--left {\r\n  transform: translateX(-20%);\r\n}\r\n\r\n.container.right-panel-active .overlay--left {\r\n  transform: translateX(0);\r\n}\r\n\r\n.overlay--right {\r\n  right: 0;\r\n  transform: translateX(0);\r\n}\r\n\r\n.container.right-panel-active .overlay--right {\r\n  transform: translateX(20%);\r\n}\r\n\r\n.btn {\r\n  background-color: var(--blue);\r\n  background-image: linear-gradient(90deg, var(--blue) 0%, var(--lightblue) 74%);\r\n  border-radius: 20px;\r\n  border: 1px solid var(--blue);\r\n  color: var(--white);\r\n  cursor: pointer;\r\n  font-size: 0.8rem;\r\n  font-weight: bold;\r\n  letter-spacing: 0.1rem;\r\n  padding: 0.9rem 4rem;\r\n  text-transform: uppercase;\r\n  transition: transform 80ms ease-in;\r\n}\r\n\r\n.form>.btn {\r\n  margin-top: 1.5rem;\r\n}\r\n\r\n.btn:active {\r\n  transform: scale(0.95);\r\n}\r\n\r\n.btn:focus {\r\n  outline: none;\r\n}\r\n\r\n.form {\r\n  background-color: var(--white);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: 0 3rem;\r\n  height: 100%;\r\n  text-align: center;\r\n}\r\n\r\n.input {\r\n  background-color: #fff;\r\n  border: none;\r\n  padding: 0.9rem 0.9rem;\r\n  margin: 0.5rem 0;\r\n  width: 100%;\r\n  border-radius: var(--button-radius);\r\n}\r\n.get-verification-code {\r\n  color: var(--blue); /* 蓝色文字 */\r\n  cursor: pointer; /* 鼠标指针变为手型 */\r\n  margin-left: 0.5rem; /* 左边距 */\r\n}\r\n.get-verification-code:hover {\r\n  text-decoration: underline; /* 鼠标悬停时添加下划线 */\r\n}\r\n\r\n@keyframes show {\r\n\r\n  0%,\r\n  49.99% {\r\n    opacity: 0;\r\n    z-index: 1;\r\n  }\r\n\r\n  50%,\r\n  100% {\r\n    opacity: 1;\r\n    z-index: 5;\r\n  }\r\n}\r\n\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
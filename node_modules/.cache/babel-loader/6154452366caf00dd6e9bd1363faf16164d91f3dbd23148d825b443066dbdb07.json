{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"doctor-box\"\n};\nconst _hoisted_2 = {\n  class: \"doctor-info\"\n};\nconst _hoisted_3 = {\n  class: \"doctor-profile\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"appointment-options\"\n};\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  class: \"fee\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_9 = {\n  class: \"modal-content\"\n};\nconst _hoisted_10 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n    src: $data.doctorImage,\n    alt: \"doctor photo\"\n  }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"div\", null, [_createElementVNode(\"h3\", null, _toDisplayString($props.doctor.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($props.doctor.department), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($props.doctor.outpatientType), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"p\", null, \"可预约时间：\" + _toDisplayString($options.formatDateTime($props.doctor.visitTime)), 1 /* TEXT */), _createCommentVNode(\" 显示剩余号数 \"), $props.doctor.remainingNumbers > 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, \"剩余号数：\" + _toDisplayString($props.doctor.remainingNumbers), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $data.showAppointmentModal = true)\n  }, \"预约\")])]), _createElementVNode(\"div\", _hoisted_7, \"挂号费 \" + _toDisplayString($props.doctor.cost) + \"元\", 1 /* TEXT */)]), _createCommentVNode(\" 模态窗口 \"), $data.showAppointmentModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"span\", {\n    class: \"close\",\n    onClick: _cache[1] || (_cache[1] = $event => $data.showAppointmentModal = false)\n  }, \"×\"), _createElementVNode(\"h2\", null, \"预约医生：\" + _toDisplayString($props.doctor.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"科室：\" + _toDisplayString($props.doctor.department), 1 /* TEXT */), _createElementVNode(\"p\", null, \"类型：\" + _toDisplayString($props.doctor.outpatientType), 1 /* TEXT */), _createElementVNode(\"p\", null, \"可预约时间：\" + _toDisplayString($options.formatDateTime($props.doctor.visitTime)), 1 /* TEXT */), _createCommentVNode(\" 显示剩余号数 \"), $props.doctor.remainingNumbers > 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_10, \"剩余号数：\" + _toDisplayString($props.doctor.remainingNumbers), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 显示挂号费 \"), _createElementVNode(\"p\", null, \"挂号费：\" + _toDisplayString($props.doctor.cost) + \"元\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"挂号人：\" + _toDisplayString($options.userInfo.name), 1 /* TEXT */), _createCommentVNode(\"<label for=\\\"patient\\\">选择挂号人：</label>\\r\\n      <select id=\\\"patient\\\" v-model=\\\"selectedPatient\\\">\\r\\n        <option disabled value=\\\"\\\">请选择</option>\\r\\n        <option v-for=\\\"patient in patients\\\" :key=\\\"patient.id\\\" :value=\\\"patient\\\">{{ patient.name }}</option>\\r\\n      </select> \"), _createCommentVNode(\" 支付按钮 \"), _createElementVNode(\"button\", {\n    class: \"payment-button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.handlePayment && $options.handlePayment(...args))\n  }, \"支付\")])])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","src","$data","doctorImage","alt","_hoisted_4","_toDisplayString","$props","doctor","name","department","outpatientType","_hoisted_5","$options","formatDateTime","visitTime","_createCommentVNode","remainingNumbers","_hoisted_6","onClick","_cache","$event","showAppointmentModal","_hoisted_7","cost","_hoisted_8","_hoisted_9","_hoisted_10","userInfo","args","handlePayment"],"sources":["C:\\Users\\zsx\\Desktop\\12.15\\qian\\src\\components\\DoctorInfo.vue"],"sourcesContent":["<template>\r\n  <div class=\"doctor-box\">\r\n    <div class=\"doctor-info\">\r\n      <div class=\"doctor-profile\">\r\n        <img :src=\"doctorImage\" alt=\"doctor photo\" />\r\n        <div>\r\n          <h3>{{ doctor.name }}</h3>\r\n          <p>{{ doctor.department }}</p>\r\n          <p>{{ doctor.outpatientType }}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"appointment-options\">\r\n        <p>可预约时间：{{ formatDateTime(doctor.visitTime) }}</p>\r\n        <!-- 显示剩余号数 -->\r\n        <p v-if=\"doctor.remainingNumbers > 0\">剩余号数：{{ doctor.remainingNumbers }}</p>\r\n        <button @click=\"showAppointmentModal = true\">预约</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"fee\">挂号费 {{ doctor.cost }}元</div>\r\n  </div>\r\n\r\n  <!-- 模态窗口 -->\r\n  <div v-if=\"showAppointmentModal\" class=\"modal\">\r\n    <div class=\"modal-content\">\r\n      <span class=\"close\" @click=\"showAppointmentModal = false\">&times;</span>\r\n      <h2>预约医生：{{ doctor.name }}</h2>\r\n      <p>科室：{{ doctor.department }}</p>\r\n      <p>类型：{{ doctor.outpatientType }}</p>\r\n      <p>可预约时间：{{ formatDateTime(doctor.visitTime) }}</p>\r\n      <!-- 显示剩余号数 -->\r\n      <p v-if=\"doctor.remainingNumbers > 0\">剩余号数：{{ doctor.remainingNumbers }}</p>\r\n      <!-- 显示挂号费 -->\r\n      <p>挂号费：{{ doctor.cost }}元</p>\r\n      <p>挂号人：{{ userInfo.name }}</p>\r\n\r\n      <!--<label for=\"patient\">选择挂号人：</label>\r\n      <select id=\"patient\" v-model=\"selectedPatient\">\r\n        <option disabled value=\"\">请选择</option>\r\n        <option v-for=\"patient in patients\" :key=\"patient.id\" :value=\"patient\">{{ patient.name }}</option>\r\n      </select> -->\r\n\r\n\r\n      <!-- 支付按钮 -->\r\n      <button class=\"payment-button\" @click=\"handlePayment\">支付</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport doctorImage from '@/assets/doctor.png';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  props: {\r\n    doctor: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      doctorImage: doctorImage,\r\n      showAppointmentModal: false,\r\n      selectedPatient: '',\r\n      patients: [\r\n        { id: 2, name: '李昊' },\r\n        { id: 3, name: '李四' },\r\n        { id: 1, name: '王五' }\r\n      ]\r\n    };\r\n  },\r\n  computed: {\r\n    // 从个人中心获取用户名、姓名和电话\r\n    userInfo() {\r\n      return this.$store.state.userInfo;\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    bookAppointment(doctor) {\r\n      alert(`预约${doctor.name}在${doctor.VisitTime}`);\r\n    },\r\n    handlePayment() {\r\n    \r\n        const registrationTime = new Date();\r\n        registrationTime.setHours(registrationTime.getHours() + 8);\r\n        // 构建要发送到后端的数据对象\r\n        const RegistrationList = {\r\n          name:  this.userInfo.name ,\r\n          age: '18', // 假设年龄信息需要从其他地方获取\r\n          phoneNumber: this.userInfo.phonenumber, // 假设电话号码信息需要从其他地方获取\r\n          department: this.doctor.department,\r\n          visitTime: this.doctor.visitTime,\r\n          registrationTime:  registrationTime.toISOString(),\r\n          doctor_Name: this.doctor.name,\r\n          outpatientType: this.doctor.outpatientType,\r\n          accountName: this.userInfo.accountName, // 假设你有一个方法来获取当前登录用户的用户名\r\n        };\r\n\r\n        // 使用 axios 发送 POST 请求到后端\r\n        axios.post('/registrationLists/addRegistration', RegistrationList)\r\n          .then(response => {\r\n            // 请求成功，处理响应\r\n            console.log('Appointment successful:', response.data);\r\n            alert('预约成功！');\r\n            this.showAppointmentModal = false; // 关闭模态框\r\n          })\r\n          .catch(error => {\r\n            // 请求失败，处理错误\r\n            console.error('Appointment failed:', error.response || error.message);\r\n            alert('预约失败，请重试。');\r\n          });\r\n      \r\n    },\r\n    formatDateTime(dateTimeString) {\r\n      const date = new Date(dateTimeString);\r\n      const year = date.getFullYear();\r\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n      const day = date.getDate().toString().padStart(2, '0');\r\n      const hours = date.getHours().toString().padStart(2, '0');\r\n      const minutes = date.getMinutes().toString().padStart(2, '0');\r\n\r\n      return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.doctor-box {\r\n  width: 30%;\r\n  min-width: 240px;\r\n  border: 1px solid #ddd;\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.doctor-profile {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.doctor-profile img {\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  margin-right: 20px;\r\n}\r\n\r\n.appointment-options {\r\n  margin-top: 20px;\r\n}\r\n\r\n.fee {\r\n  margin-top: 20px;\r\n  font-weight: bold;\r\n}\r\n\r\n.modal {\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-content {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  width: 300px;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n}\r\n\r\n/* 支付按钮样式 */\r\n.payment-button {\r\n  background-color: #3161FF; /* 蓝色背景 */\r\n  color: #ffffff; /* 白色文字 */\r\n  padding: 10px 20px; /* 内边距 */\r\n  border: none; /* 无边框 */\r\n  border-radius: 5px; /* 圆角 */\r\n  cursor: pointer; /* 鼠标指针 */\r\n  font-size: 16px; /* 文字大小 */\r\n  margin-top: 10px; /* 外边距 */\r\n  float: right;\r\n}\r\n\r\n.payment-button:hover {\r\n  background-color: #2980b9; /* 鼠标悬停时的背景颜色 */\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"auth-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"auth-form\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"auth-form\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 注册账号表单 \"), $data.isSignup ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[10] || (_cache[10] = _createElementVNode(\"h2\", null, \"注册账号\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.signupPhone = $event),\n    placeholder: \"手机号\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.signupPhone]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.signupPassword = $event),\n    type: \"password\",\n    placeholder: \"设置密码\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.signupPassword]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.verificationCode = $event),\n    placeholder: \"验证码\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.verificationCode]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.getVerificationCode && $options.getVerificationCode(...args))\n  }, \"获取验证码\"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.register && $options.register(...args))\n  }, \"注册\")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 登录账号表单 \"), !$data.isSignup ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[11] || (_cache[11] = _createElementVNode(\"h2\", null, \"登录账号\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.loginAccount = $event),\n    placeholder: \"用户名/手机号\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.loginAccount]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.loginPassword = $event),\n    type: \"password\",\n    placeholder: \"密码\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.loginPassword]]), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[7] || (_cache[7] = _withModifiers((...args) => $options.forgotPassword && $options.forgotPassword(...args), [\"prevent\"]))\n  }, \"忘记密码?\"), _createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = (...args) => $options.login && $options.login(...args))\n  }, \"登录\"), _createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = (...args) => $options.switchToSignup && $options.switchToSignup(...args))\n  }, \"注册账号\")])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","$data","isSignup","_hoisted_2","_createElementVNode","_cache","$event","signupPhone","placeholder","signupPassword","type","verificationCode","onClick","args","$options","getVerificationCode","register","_hoisted_3","loginAccount","loginPassword","href","_withModifiers","forgotPassword","login","switchToSignup"],"sources":["C:\\Users\\zsx\\Desktop\\v\\hosptial-vue\\vue\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div class=\"auth-container\">\r\n    <!-- 注册账号表单 -->\r\n    <div class=\"auth-form\" v-if=\"isSignup\">\r\n      <h2>注册账号</h2>\r\n      <input v-model=\"signupPhone\" placeholder=\"手机号\" />\r\n      <input v-model=\"signupPassword\" type=\"password\" placeholder=\"设置密码\" />\r\n      <input v-model=\"verificationCode\" placeholder=\"验证码\" />\r\n      <button @click=\"getVerificationCode\">获取验证码</button>\r\n      <button @click=\"register\">注册</button>\r\n    </div>\r\n\r\n    <!-- 登录账号表单 -->\r\n    <div class=\"auth-form\" v-if=\"!isSignup\">\r\n      <h2>登录账号</h2>\r\n      <input v-model=\"loginAccount\" placeholder=\"用户名/手机号\" />\r\n      <input v-model=\"loginPassword\" type=\"password\" placeholder=\"密码\" />\r\n      <a href=\"#\" @click.prevent=\"forgotPassword\">忘记密码?</a>\r\n      <button @click=\"login\">登录</button>\r\n      <button @click=\"switchToSignup\">注册账号</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      isSignup: false, // 控制显示注册还是登录表单\r\n      signupPhone: '',\r\n      signupPassword: '',\r\n      verificationCode: '',\r\n      loginAccount: '',\r\n      loginPassword: ''\r\n    };\r\n  },\r\n  methods: {\r\n    switchToSignup() {\r\n      this.isSignup = true;\r\n    },\r\n    switchToLogin() {\r\n      this.isSignup = false;\r\n    },\r\n    getVerificationCode() {\r\n      // 发送验证码逻辑\r\n    },\r\n    register() {\r\n      // 注册逻辑\r\n    },\r\n    login() {\r\n      // 登录逻辑\r\n    },\r\n    forgotPassword() {\r\n      // 忘记密码逻辑\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.auth-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n}\r\n\r\n.auth-form {\r\n  border: 1px solid #ccc;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.auth-form h2 {\r\n  text-align: center;\r\n}\r\n\r\n.auth-form input {\r\n  display: block;\r\n  width: 100%;\r\n  margin-bottom: 10px;\r\n  padding: 8px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.auth-form button,\r\n.auth-form a {\r\n  display: block;\r\n  width: 100%;\r\n  padding: 10px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  color: white;\r\n  background-color: #007bff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.auth-form a {\r\n  background-color: transparent;\r\n  color: #007bff;\r\n  margin-top: 10px;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EAD7BC,GAAA;EAGSD,KAAK,EAAC;;;EAHfC,GAAA;EAaSD,KAAK,EAAC;;;uBAZbE,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJC,mBAAA,YAAe,EACcC,KAAA,CAAAC,QAAQ,I,cAArCJ,mBAAA,CAOM,OAPNK,UAOM,G,4BANJC,mBAAA,CAAa,YAAT,MAAI,sB,gBACRA,mBAAA,CAAiD;IALvD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKsBL,KAAA,CAAAM,WAAW,GAAAD,MAAA;IAAEE,WAAW,EAAC;iDAAzBP,KAAA,CAAAM,WAAW,E,mBAC3BH,mBAAA,CAAqE;IAN3E,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMsBL,KAAA,CAAAQ,cAAc,GAAAH,MAAA;IAAEI,IAAI,EAAC,UAAU;IAACF,WAAW,EAAC;iDAA5CP,KAAA,CAAAQ,cAAc,E,mBAC9BL,mBAAA,CAAsD;IAP5D,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOsBL,KAAA,CAAAU,gBAAgB,GAAAL,MAAA;IAAEE,WAAW,EAAC;iDAA9BP,KAAA,CAAAU,gBAAgB,E,GAChCP,mBAAA,CAAmD;IAA1CQ,OAAK,EAAAP,MAAA,QAAAA,MAAA,UAAAQ,IAAA,KAAEC,QAAA,CAAAC,mBAAA,IAAAD,QAAA,CAAAC,mBAAA,IAAAF,IAAA,CAAmB;KAAE,OAAK,GAC1CT,mBAAA,CAAqC;IAA5BQ,OAAK,EAAAP,MAAA,QAAAA,MAAA,UAAAQ,IAAA,KAAEC,QAAA,CAAAE,QAAA,IAAAF,QAAA,CAAAE,QAAA,IAAAH,IAAA,CAAQ;KAAE,IAAE,E,KATlCb,mBAAA,gBAYIA,mBAAA,YAAe,E,CACeC,KAAA,CAAAC,QAAQ,I,cAAtCJ,mBAAA,CAOM,OAPNmB,UAOM,G,4BANJb,mBAAA,CAAa,YAAT,MAAI,sB,gBACRA,mBAAA,CAAsD;IAf5D,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAesBL,KAAA,CAAAiB,YAAY,GAAAZ,MAAA;IAAEE,WAAW,EAAC;iDAA1BP,KAAA,CAAAiB,YAAY,E,mBAC5Bd,mBAAA,CAAkE;IAhBxE,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAgBsBL,KAAA,CAAAkB,aAAa,GAAAb,MAAA;IAAEI,IAAI,EAAC,UAAU;IAACF,WAAW,EAAC;iDAA3CP,KAAA,CAAAkB,aAAa,E,GAC7Bf,mBAAA,CAAqD;IAAlDgB,IAAI,EAAC,GAAG;IAAER,OAAK,EAAAP,MAAA,QAAAA,MAAA,MAjBxBgB,cAAA,KAAAR,IAAA,KAiBkCC,QAAA,CAAAQ,cAAA,IAAAR,QAAA,CAAAQ,cAAA,IAAAT,IAAA,CAAc;KAAE,OAAK,GACjDT,mBAAA,CAAkC;IAAzBQ,OAAK,EAAAP,MAAA,QAAAA,MAAA,UAAAQ,IAAA,KAAEC,QAAA,CAAAS,KAAA,IAAAT,QAAA,CAAAS,KAAA,IAAAV,IAAA,CAAK;KAAE,IAAE,GACzBT,mBAAA,CAA6C;IAApCQ,OAAK,EAAAP,MAAA,QAAAA,MAAA,UAAAQ,IAAA,KAAEC,QAAA,CAAAU,cAAA,IAAAV,QAAA,CAAAU,cAAA,IAAAX,IAAA,CAAc;KAAE,MAAI,E,KAnB1Cb,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"my-registrations-container\"\n};\nconst _hoisted_2 = {\n  class: \"registration - info - container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_registration_info = _resolveComponent(\"registration-info\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", {\n    class: \"title\"\n  }, \"我的挂号\", -1 /* HOISTED */)), _createCommentVNode(\" 添加输入框和查询按钮 \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchAccountName = $event),\n    placeholder: \"输入账户名查询\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchAccountName]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.fetchRegistrationInfoByAccountName && $options.fetchRegistrationInfoByAccountName(...args))\n  }, \"查询\"), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filteredRegistrationInfo, reg => {\n    return _openBlock(), _createBlock(_component_registration_info, {\n      key: reg.medicalNumber,\n      registration: reg\n    }, null, 8 /* PROPS */, [\"registration\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","type","_cache","$event","$data","searchAccountName","placeholder","onClick","args","$options","fetchRegistrationInfoByAccountName","_hoisted_2","_Fragment","_renderList","filteredRegistrationInfo","reg","_createBlock","_component_registration_info","key","medicalNumber","registration"],"sources":["C:\\Users\\zsx\\Desktop\\12.15\\qian\\src\\components\\MyRegistrationsComponent.vue"],"sourcesContent":["<!-- MyRegistrationsComponent.vue -->\r\n<template>\r\n\r\n  <div class=\"my-registrations-container\">\r\n    <h1 class=\"title\">我的挂号</h1>\r\n    <!-- 添加输入框和查询按钮 -->\r\n    <input type=\"text\" v-model=\"searchAccountName\" placeholder=\"输入账户名查询\" />\r\n    <button @click=\"fetchRegistrationInfoByAccountName\">查询</button>\r\n    <div class=\"registration - info - container\">\r\n      <registration-info\r\n                    v-for=\"reg in filteredRegistrationInfo\"\r\n                    :key=\"reg.medicalNumber\"\r\n                    :registration=\"reg\"\r\n      ></registration-info>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport RegistrationInfo from './RegistrationInfo.vue';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  components: {\r\n    RegistrationInfo\r\n  },\r\n  data() {\r\n    return {\r\n      registrationInfo: [],\r\n      filteredRegistrationInfo: [],\r\n      searchAccountName: \"\"\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchRegistrationInfoByAccountName() {\r\n      try {\r\n        const response = await axios.get(`/registrationLists/account/${this.searchAccountName}`);\r\n        this.registrationInfo = response.data;\r\n        this.filterRegistrationInfo();\r\n      } catch (error) {\r\n        console.error('Error fetching registration info by account name:', error);\r\n      }\r\n    },\r\n    filterRegistrationInfo() {\r\n      this.filteredRegistrationInfo = this.registrationInfo.filter(item => item.accountName === this.searchAccountName);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.my-registrations-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100%; /* 使容器占满整个视口高度 */\r\n  width: 100%; /* 沾满整个视口宽度 */\r\n  box-sizing: border-box; /* 确保 padding 不会影响宽度和高度 */\r\n  padding: 20px; /* 根据需要添加内边距 */\r\n  margin-left: 20px; /* 侧边栏宽度 */\r\n}\r\n\r\n.title {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.registration-info-container {\r\n  width: 80%;\r\n  max-width: 1200px;\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  border: 1px solid #ddd;\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n}\r\n.nav-bar {\r\n  width: 200px;\r\n  height: 100%;\r\n  position: fixed;\r\n  background-color:#3131FF ;\r\n  color: white;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n</style>"],"mappings":";;EAGOA,KAAK,EAAC;AAA4B;;EAKhCA,KAAK,EAAC;AAAiC;;;uBAL9CC,mBAAA,CAYM,OAZNC,UAYM,G,0BAXJC,mBAAA,CAA2B;IAAvBH,KAAK,EAAC;EAAO,GAAC,MAAI,sBACtBI,mBAAA,gBAAmB,E,gBACnBD,mBAAA,CAAuE;IAAhEE,IAAI,EAAC,MAAM;IANtB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMgCC,KAAA,CAAAC,iBAAiB,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAA/BF,KAAA,CAAAC,iBAAiB,E,GAC7CN,mBAAA,CAA+D;IAAtDQ,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,kCAAA,IAAAD,QAAA,CAAAC,kCAAA,IAAAF,IAAA,CAAkC;KAAE,IAAE,GACtDT,mBAAA,CAMM,OANNY,UAMM,I,kBALJd,mBAAA,CAIqBe,SAAA,QAb3BC,WAAA,CAUkCT,KAAA,CAAAU,wBAAwB,EAA/BC,GAAG;yBADxBC,YAAA,CAIqBC,4BAAA;MAFNC,GAAG,EAAEH,GAAG,CAACI,aAAa;MACtBC,YAAY,EAAEL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
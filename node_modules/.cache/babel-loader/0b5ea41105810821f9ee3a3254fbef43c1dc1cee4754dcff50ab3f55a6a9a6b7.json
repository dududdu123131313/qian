{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport DoctorInfo from './DoctorInfo.vue';\nexport default {\n  components: {\n    DoctorInfo\n  },\n  data() {\n    return {\n      departments: ['康复科', '普外科', '中医科', '眼科', '口腔科', '皮肤科', '骨科', '风湿免疫科', '肿瘤科', '心内科', '传染科', '妇产科', '呼吸内科', '儿科', '血液科', '泌尿外科', '耳鼻喉科', '神经内科', '急诊科', '内分泌科'],\n      types: ['专家门诊', '普通门诊'],\n      selectedDepartment: '',\n      selectedType: '',\n      selectedDate: '',\n      dates: [],\n      doctors: [],\n      showResults: false\n    };\n  },\n  created() {\n    this.dates = this.generateDates(5);\n  },\n  methods: {\n    selectDepartment(department) {\n      this.selectedDepartment = department;\n    },\n    selectType(type) {\n      this.selectedType = type;\n    },\n    selectDate(date) {\n      this.selectedDate = date;\n    },\n    handleQuery() {\n      const encodedDepartment = encodeURIComponent(this.selectedDepartment);\n      const encodedType = encodeURIComponent(this.selectedType);\n      const encodedDate = encodeURIComponent(this.selectedDate);\n\n      // 验证日期格式是否正确\n      if (this.selectedDate && !/^\\d{4}-\\d{2}-\\d{2}$/.test(this.selectedDate)) {\n        alert('请输入正确的日期格式（例如：YYYY-MM-DD）');\n        return;\n      }\n      const queryUrl = `/doctors/query?department=${encodedDepartment}&outpatientType=${encodedType}&visitTime=${encodedDate}`;\n      axios.get(queryUrl).then(response => {\n        this.doctors = response.data;\n        this.showResults = true;\n      }).catch(error => {\n        console.error('Error fetching doctor info:', error);\n        if (error.response) {\n          alert('查询失败，请稍后重试。错误信息：' + error.response.data);\n        } else {\n          alert('网络连接异常，请检查网络后重试。');\n        }\n      });\n    },\n    generateDates(days) {\n      const dates = [];\n      const today = new Date();\n      for (let i = 0; i < days; i++) {\n        const nextDay = new Date(today);\n        nextDay.setDate(today.getDate() + i);\n        const year = nextDay.getFullYear();\n        const month = (nextDay.getMonth() + 1).toString().padStart(2, '0');\n        const day = nextDay.getDate().toString().padStart(2, '0');\n        dates.push(`${year}-${month}-${day}`);\n      }\n      return dates;\n    }\n  }\n};","map":{"version":3,"names":["axios","DoctorInfo","components","data","departments","types","selectedDepartment","selectedType","selectedDate","dates","doctors","showResults","created","generateDates","methods","selectDepartment","department","selectType","type","selectDate","date","handleQuery","encodedDepartment","encodeURIComponent","encodedType","encodedDate","test","alert","queryUrl","get","then","response","catch","error","console","days","today","Date","i","nextDay","setDate","getDate","year","getFullYear","month","getMonth","toString","padStart","day","push"],"sources":["C:\\Users\\zsx\\Desktop\\12.15\\qian\\src\\components\\RegistrationComponent.vue"],"sourcesContent":["<!-- RegistrationComponent.vue -->\r\n<template>\r\n  <div class=\"nav-bar\">\r\n    <h1 class=\"nav-title\">南京市浦口人民医院</h1>\r\n    <!-- 导航链接，使用router-link -->\r\n    <router-link to=\"/home\" class=\"nav-item\">主页</router-link>\r\n    <router-link to=\"/registration\" class=\"nav-item\">预约挂号</router-link>\r\n    <router-link to=\"/my-registrations\" class=\"nav-item\">我的挂号</router-link>\r\n    <router-link to=\"/my-bills\" class=\"nav-item\">我的账单</router-link>\r\n    <router-link to=\"/my-messages\" class=\"nav-item\">消息中心</router-link>\r\n    <router-link to=\"/profile\" class=\"nav-item\">个人中心</router-link>\r\n  </div>\r\n\r\n  <div class=\"container\">\r\n    <h1 class=\"title\">预约挂号</h1>\r\n        <div class=\"selection-container\">\r\n      <!-- 选择科室 -->\r\n      <div class=\"selection-row\">\r\n        <span>选择科室：</span>\r\n        <button v-for=\"department in departments\" :key=\"department\" @click=\"selectDepartment(department)\">\r\n          {{ department }}\r\n        </button>\r\n        <input type=\"text\" v-model=\"selectedDepartment\" class=\"selection-input\" />\r\n      </div>\r\n      <!-- 选择类型 -->\r\n      <div class=\"selection-row\">\r\n        <span>选择类型：</span>\r\n        <button v-for=\"type in types\" :key=\"type\" @click=\"selectType(type)\">\r\n          {{ type }}\r\n        </button>\r\n        <input type=\"text\" v-model=\"selectedType\" class=\"selection-input\" />\r\n      </div>\r\n      <!-- 选择日期 -->\r\n      <div class=\"selection-row\">\r\n        <span>选择日期：</span>\r\n        <button v-for=\"date in dates\" :key=\"date\" @click=\"selectDate(date)\">\r\n          {{ date }}\r\n        </button>\r\n        <input type=\"text\" v-model=\"selectedDate\" class=\"selection-input\" />\r\n      </div>\r\n    <!-- 查询按钮 -->\r\n    <button class=\"query-button\" @click=\"handleQuery\" >查询</button>\r\n    </div>\r\n\r\n  \r\n\r\n    <!-- 结果容器 -->\r\n    <div class=\"results-container\">\r\n      <div class=\"results\" v-if=\"doctors.length\">\r\n        <doctor-info\r\n          v-for=\"doctor in doctors\"\r\n          :key=\"doctor.id\"\r\n          :doctor=\"doctor\"\r\n        ></doctor-info>\r\n      </div>\r\n      <div class=\"no-results\" v-else>\r\n        <p>没有找到相关数据。</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport DoctorInfo from './DoctorInfo.vue';\r\n\r\nexport default {\r\n  components: {\r\n    DoctorInfo\r\n  },\r\n  data() {\r\n    return {\r\n      departments: ['康复科', '普外科', '中医科', '眼科', '口腔科', '皮肤科', '骨科', '风湿免疫科', '肿瘤科', '心内科', '传染科', '妇产科', '呼吸内科',\r\n        '儿科', '血液科', '泌尿外科', '耳鼻喉科', '神经内科', '急诊科', '内分泌科'],\r\n      types: ['专家门诊', '普通门诊'],\r\n      selectedDepartment: '',\r\n      selectedType: '',\r\n      selectedDate: '',\r\n      dates: [],\r\n      doctors: [],\r\n      showResults: false,\r\n\r\n    };\r\n  },\r\n  created() {\r\n    this.dates = this.generateDates(5);\r\n  },\r\n  methods: {\r\n    selectDepartment(department) {\r\n      this.selectedDepartment = department;\r\n    },\r\n    selectType(type) {\r\n      this.selectedType = type;\r\n    },\r\n    selectDate(date) {\r\n      this.selectedDate = date;\r\n    },\r\n    handleQuery() {\r\n      const encodedDepartment = encodeURIComponent(this.selectedDepartment);\r\n      const encodedType = encodeURIComponent(this.selectedType);\r\n      const encodedDate = encodeURIComponent(this.selectedDate);\r\n\r\n      // 验证日期格式是否正确\r\n      if (this.selectedDate && !/^\\d{4}-\\d{2}-\\d{2}$/.test(this.selectedDate)) {\r\n        alert('请输入正确的日期格式（例如：YYYY-MM-DD）');\r\n        return;\r\n      }\r\n\r\n\r\n      const queryUrl = `/doctors/query?department=${encodedDepartment}&outpatientType=${encodedType}&visitTime=${encodedDate}`;\r\n      axios.get(queryUrl)\r\n          .then(response => {\r\n            this.doctors = response.data;\r\n            this.showResults = true;\r\n          })\r\n          .catch(error => {\r\n            console.error('Error fetching doctor info:', error);\r\n            if (error.response) {\r\n              alert('查询失败，请稍后重试。错误信息：' + error.response.data);\r\n            } else {\r\n              alert('网络连接异常，请检查网络后重试。');\r\n            }\r\n          });\r\n    },\r\n\r\n\r\n    generateDates(days) {\r\n      const dates = [];\r\n      const today = new Date();\r\n      for (let i = 0; i < days; i++) {\r\n        const nextDay = new Date(today);\r\n        nextDay.setDate(today.getDate() + i);\r\n        const year = nextDay.getFullYear();\r\n        const month = (nextDay.getMonth() + 1).toString().padStart(2, '0');\r\n        const day = nextDay.getDate().toString().padStart(2, '0');\r\n        dates.push(`${year}-${month}-${day}`);\r\n      }\r\n      return dates;\r\n    }\r\n  }\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start; \r\n  align-items: center;\r\n  margin-left:200px;\r\n  height: 100vh; /* 使容器占满整个视口高度 */\r\n  width: 100%; /* 沾满整个视口宽度 */\r\n  box-sizing: border-box; /* 确保 padding 不会影响宽度和高度 */\r\n  padding: 20px; /* 根据需要添加内边距 */\r\n}\r\n\r\n.title {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.selection-container {\r\n  border: 1px solid #ddd;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  width: 90%;\r\n  margin-bottom: 20px;\r\n  background-color: white;\r\n}\r\n\r\n.selection-row {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n  flex-wrap: wrap; /* 允许子元素换行 */\r\n}\r\n\r\n.selection-row button {\r\n  padding: 8px 16px; /* 按钮内边距 */\r\n  margin: 4px; /* 按钮外边距 */\r\n  border: 1px solid #ccc; /* 按钮边框 */\r\n  border-radius: 4px; /* 按钮圆角 */\r\n  background-color: #f8f8f8; /* 按钮背景颜色 */\r\n  cursor: pointer; /* 鼠标悬停时显示指针 */\r\n  flex: 1 1 auto; /* 允许按钮占据可用空间 */\r\n  min-width: 80px; /* 按钮的最小宽度 */\r\n  text-align: center; /* 文本居中 */\r\n}\r\n\r\n.selection-input {\r\n  margin-left: 10px;\r\n  border: 1px solid #ccc;\r\n  padding: 5px;\r\n  border-radius: 4px;\r\n  width: 200px;\r\n  margin-left: auto;\r\n}\r\n\r\n.query-button {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  background-color: #3161FF;\r\n  color: #ffffff;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-top: 20px; /* 添加上边距 */\r\n  display: block; /* 使按钮表现为块级元素 */\r\n  margin-left: auto; /* 右边距自动 */\r\n  margin-right: auto; /* 左边距自动 */\r\n  width: fit-content; /* 宽度适应内容 */\r\n}\r\n\r\n.query-button:hover {\r\n  background-color: #304add;\r\n}\r\n\r\n\r\n.results-container {\r\n  width: 90%;\r\n  height: 100%;\r\n  margin-top: 20px;\r\n  padding: 20px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.results {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  display: flex;\r\n  justify-content: flex-start; /* 水平排列，从左到右 */\r\n  gap: 20px;\r\n}\r\n\r\n.doctor-info {\r\n  flex: 1 1 300px;\r\n  margin: 10px;\r\n  border: 0;\r\n  padding: 0;\r\n  border-radius: 0;\r\n  background-color: transparent;\r\n}\r\n\r\n.no-results {\r\n  color: #999;\r\n  text-align: center;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n.nav-bar {\r\n  width: 200px;\r\n  height: 100%;\r\n  position: fixed;\r\n  background-color:#3131FF ;\r\n  color: white;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n\r\n}\r\n\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
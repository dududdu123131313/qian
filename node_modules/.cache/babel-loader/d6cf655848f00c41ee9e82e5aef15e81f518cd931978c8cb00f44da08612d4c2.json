{"ast":null,"code":"export default {\n  props: {\n    registration: {\n      type: Object,\n      required: true\n    }\n  },\n  computed: {\n    canCancel() {\n      const now = new Date();\n      const visitTime = new Date(this.registration.visitTime);\n      const registrationTime = new Date(this.registration.registrationTime);\n      return now.getTime() < visitTime.getTime() && now.getTime() < registrationTime.getTime();\n    }\n  },\n  methods: {\n    formatTime(time) {\n      if (time) {\n        return new Date(time).toLocaleString();\n      }\n      return '';\n    },\n    cancelAppointment() {\n      // 构建发送到后端的数据对象\n      const data = {\n        patientName: this.registration.name,\n        visitTime: this.registration.visitTime,\n        doctorName: this.registration.doctor_Name\n      };\n\n      // 发送请求到后端API来取消预约\n      axios.post('/api/cancel-appointment', data).then(response => {\n        if (response.data.success) {\n          alert('预约已取消');\n          // 从列表中删除这条记录\n          this.$emit('delete-appointment', this.registration);\n        } else {\n          alert('预约取消失败: ' + response.data.message);\n        }\n      }).catch(error => {\n        console.error('取消预约出错:', error);\n        alert('预约取消失败，请重试。');\n      });\n    }\n  }\n};","map":{"version":3,"names":["props","registration","type","Object","required","computed","canCancel","now","Date","visitTime","registrationTime","getTime","methods","formatTime","time","toLocaleString","cancelAppointment","data","patientName","name","doctorName","doctor_Name","axios","post","then","response","success","alert","$emit","message","catch","error","console"],"sources":["C:\\Users\\zsx\\Desktop\\v\\hosptial-vue\\vue\\src\\components\\RegistrationInfo.vue"],"sourcesContent":["<!-- RegistrationInfo.vue -->\r\n<template>\r\n  <div class=\"registration-info\" :class=\"{ 'disabled-appointment':!canCancel }\">\r\n    <p>就诊科室: {{ registration.department }}</p>\r\n    <p>门诊类型: {{ registration.outpatientType }}</p>\r\n    <p>看诊医生: {{ registration.doctor_Name }}</p>\r\n    <p>就诊时间: {{ formatTime(registration.visitTime) }}</p>\r\n    <p>挂号时间: {{ formatTime(registration.registrationTime) }}</p>\r\n    <p>就诊人: {{ registration.name }}</p>\r\n    <p>就诊号: {{ registration.medicalNumber }}</p>\r\n    <p>订单ID: {{ registration.ID }}</p>\r\n    <button class=\"cancel - button\" @click=\"cancelAppointment\">取消预约</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    registration: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  computed: {\r\n    canCancel() {\r\n      const now = new Date();\r\n      const visitTime = new Date(this.registration.visitTime);\r\n      const registrationTime = new Date(this.registration.registrationTime);\r\n      return now.getTime() < visitTime.getTime() && now.getTime() < registrationTime.getTime();\r\n    }\r\n  },\r\n  methods: {\r\n    formatTime(time) {\r\n      if (time) {\r\n        return new Date(time).toLocaleString();\r\n      }\r\n      return '';\r\n    },\r\n    cancelAppointment() {\r\n    // 构建发送到后端的数据对象\r\n    const data = {\r\n      patientName: this.registration.name,\r\n      visitTime: this.registration.visitTime,\r\n      doctorName: this.registration.doctor_Name\r\n    };\r\n\r\n    // 发送请求到后端API来取消预约\r\n    axios.post('/api/cancel-appointment', data)\r\n      .then(response => {\r\n        if (response.data.success) {\r\n          alert('预约已取消');\r\n          // 从列表中删除这条记录\r\n          this.$emit('delete-appointment', this.registration);\r\n        } else {\r\n          alert('预约取消失败: ' + response.data.message);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('取消预约出错:', error);\r\n        alert('预约取消失败，请重试。');\r\n      });\r\n  }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.registration-info {\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.cancel-button {\r\n  padding: 10px 20px;\r\n  background-color: #f44336;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n \r\n}\r\n.registration-info {\r\n                  padding: 20px;\r\n                  margin-bottom: 20px;\r\n                  border-bottom: 1px solid #ddd;\r\n                  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n                  background-color: #fff;\r\n                  border-radius: 8px;\r\n                }\r\n.disabled-appointment {\r\n              opacity: 0.5;\r\n            }\r\n.cancel-button:disabled {\r\n  background-color: #ccc;\r\n  cursor: not-allowed;\r\n}\r\n</style>"],"mappings":"AAgBA,eAAe;EACbA,KAAK,EAAE;IACLC,YAAY,EAAE;MACZC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,SAASA,CAAA,EAAG;MACV,MAAMC,GAAE,GAAI,IAAIC,IAAI,CAAC,CAAC;MACtB,MAAMC,SAAQ,GAAI,IAAID,IAAI,CAAC,IAAI,CAACP,YAAY,CAACQ,SAAS,CAAC;MACvD,MAAMC,gBAAe,GAAI,IAAIF,IAAI,CAAC,IAAI,CAACP,YAAY,CAACS,gBAAgB,CAAC;MACrE,OAAOH,GAAG,CAACI,OAAO,CAAC,IAAIF,SAAS,CAACE,OAAO,CAAC,KAAKJ,GAAG,CAACI,OAAO,CAAC,IAAID,gBAAgB,CAACC,OAAO,CAAC,CAAC;IAC1F;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAACC,IAAI,EAAE;MACf,IAAIA,IAAI,EAAE;QACR,OAAO,IAAIN,IAAI,CAACM,IAAI,CAAC,CAACC,cAAc,CAAC,CAAC;MACxC;MACA,OAAO,EAAE;IACX,CAAC;IACDC,iBAAiBA,CAAA,EAAG;MACpB;MACA,MAAMC,IAAG,GAAI;QACXC,WAAW,EAAE,IAAI,CAACjB,YAAY,CAACkB,IAAI;QACnCV,SAAS,EAAE,IAAI,CAACR,YAAY,CAACQ,SAAS;QACtCW,UAAU,EAAE,IAAI,CAACnB,YAAY,CAACoB;MAChC,CAAC;;MAED;MACAC,KAAK,CAACC,IAAI,CAAC,yBAAyB,EAAEN,IAAI,EACvCO,IAAI,CAACC,QAAO,IAAK;QAChB,IAAIA,QAAQ,CAACR,IAAI,CAACS,OAAO,EAAE;UACzBC,KAAK,CAAC,OAAO,CAAC;UACd;UACA,IAAI,CAACC,KAAK,CAAC,oBAAoB,EAAE,IAAI,CAAC3B,YAAY,CAAC;QACrD,OAAO;UACL0B,KAAK,CAAC,UAAS,GAAIF,QAAQ,CAACR,IAAI,CAACY,OAAO,CAAC;QAC3C;MACF,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/BJ,KAAK,CAAC,aAAa,CAAC;MACtB,CAAC,CAAC;IACN;EACA;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import MessageCard from './MessageCard.vue';\nimport axios from 'axios';\nexport default {\n  name: 'MessagesComponent',\n  components: {\n    MessageCard\n  },\n  data() {\n    return {\n      messages: [{\n        id: 1,\n        title: '欢迎！',\n        content: '欢迎使用医院预约挂号系统',\n        time: '2024-07-20 08:00',\n        isRead: false\n      }\n      // 更多消息...\n      ],\n      showDetails: false,\n      details: {},\n      intervalId: null // 用于存储定时器的 ID\n    };\n  },\n  created() {\n    this.startCheckingForMessages(); // 组件创建后开始检查新消息\n  },\n  beforeUnmount() {\n    if (this.intervalId) {\n      clearInterval(this.intervalId); // 组件销毁前清除定时器\n    }\n  },\n  methods: {\n    displayMessageDetails(details) {\n      this.details = details;\n      this.showDetails = true;\n    },\n    closeDetails() {\n      this.showDetails = false;\n    },\n    startCheckingForMessages() {\n      this.intervalId = setInterval(() => {\n        this.fetchMessages();\n      }, 10000); // 每 10 秒检查一次新消息\n    },\n    fetchMessages() {\n      // 模拟从后端获取新消息的过程\n      axios.get('/api/messages').then(response => {\n        const newMessages = response.data;\n        this.messages = [...this.messages, ...newMessages];\n      }).catch(error => {\n        console.error('Error fetching messages:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["MessageCard","axios","name","components","data","messages","id","title","content","time","isRead","showDetails","details","intervalId","created","startCheckingForMessages","beforeUnmount","clearInterval","methods","displayMessageDetails","closeDetails","setInterval","fetchMessages","get","then","response","newMessages","catch","error","console"],"sources":["D:\\huawei\\qian\\src\\components\\MessagesComponent.vue"],"sourcesContent":["<!-- MessagesComponent.vue -->\r\n<template>\r\n  <div class=\"nav-bar\">\r\n    <h1 class=\"nav-title\">南京市浦口人民医院</h1>\r\n    <!-- 导航链接，使用router-link -->\r\n    <router-link to=\"/home\" class=\"nav-item\">主页</router-link>\r\n    <router-link to=\"/registration\" class=\"nav-item\">预约挂号</router-link>\r\n    <router-link to=\"/my-registrations\" class=\"nav-item\">我的挂号</router-link>\r\n    <router-link to=\"/my-bills\" class=\"nav-item\">我的账单</router-link>\r\n    <router-link to=\"/my-messages\" class=\"nav-item\">消息中心</router-link>\r\n    <router-link to=\"/profile\" class=\"nav-item\">个人中心</router-link>\r\n  </div>\r\n  <div class=\"container\">\r\n    <h1 class=\"title\">消息中心</h1>\r\n    <div class=\"messages-list\">\r\n      <message-card\r\n        v-for=\"message in messages\"\r\n        :key=\"message.id\"\r\n        :title=\"message.title\"\r\n        :content=\"message.content\"\r\n        :time=\"message.time\"\r\n        :is-read=\"message.isRead\"\r\n        @show-details=\"displayMessageDetails\"\r\n      ></message-card>\r\n    </div>\r\n    <div v-if=\"showDetails\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <h2>{{ details.title }}</h2>\r\n        <p>{{ details.content }}</p>\r\n        <p>{{ details.time }}</p>\r\n        <button @click=\"closeDetails\">关闭</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MessageCard from './MessageCard.vue';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'MessagesComponent',\r\n  components: {\r\n    MessageCard\r\n  },\r\n  data() {\r\n    return {\r\n      messages: [\r\n        { id: 1, title: '欢迎！', content: '欢迎使用医院预约挂号系统', time: '2024-07-20 08:00', isRead: false },\r\n        // 更多消息...\r\n      ],\r\n      showDetails: false,\r\n      details: {},\r\n      intervalId: null, // 用于存储定时器的 ID\r\n    };\r\n  },\r\n\r\n\r\n  created() {\r\n    this.startCheckingForMessages(); // 组件创建后开始检查新消息\r\n  },\r\n  beforeUnmount() {\r\n    if (this.intervalId) {\r\n      clearInterval(this.intervalId); // 组件销毁前清除定时器\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    displayMessageDetails(details) {\r\n      this.details = details;\r\n      this.showDetails = true;\r\n    },\r\n    closeDetails() {\r\n      this.showDetails = false;\r\n    },\r\n    startCheckingForMessages() {\r\n      this.intervalId = setInterval(() => {\r\n        this.fetchMessages();\r\n      }, 10000); // 每 10 秒检查一次新消息\r\n    },\r\n    fetchMessages() {\r\n      // 模拟从后端获取新消息的过程\r\n      axios.get('/api/messages')\r\n        .then(response => {\r\n          const newMessages = response.data;\r\n          this.messages = [...this.messages, ...newMessages];\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching messages:', error);\r\n        });\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  height: 100vh; /* 使容器占满整个视口高度 */\r\n  width: calc(100% - 200px); /* 宽度减去 nav-bar 的宽度 */\r\n  box-sizing: border-box; /* 确保 padding 不会影响宽度和高度 */\r\n  padding: 20px; /* 根据需要添加内边距 */\r\n  margin-left: 200px; /* 与 nav-bar 保持一定距离 */\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.messages-list {\r\n  max-width: 95%;\r\n  margin: 0 200px;\r\n}\r\n\r\n.message-card {\r\n  margin-bottom: 20px;\r\n  cursor: pointer; /* 添加手型指针 */\r\n}\r\n\r\n.modal {\r\n  position: fixed; /* 固定定位，相对于浏览器窗口定位 */\r\n  top: 50%; /* 从顶部开始，位于视口高度的50% */\r\n  left: 50%; /* 从左侧开始，位于视口宽度的50% */\r\n  transform: translate(-50%, -50%); /* 向左和向上移动自身尺寸的50%，以确保完全居中 */\r\n  width: 50%; /* 宽度为视口宽度的50% */\r\n  height: 50%; /* 高度为视口高度的50% */\r\n  background-color: rgba(0, 0, 0, 0.5); /* 半透明背景 */\r\n  display: flex; /* 使用 Flexbox 布局 */\r\n  align-items: center; /* 垂直居中对齐子元素 */\r\n  justify-content: center; /* 水平居中对齐子元素 */\r\n  box-sizing: border-box; /* 边框和内边距包含在宽度和高度内 */\r\n  \r\n}\r\n\r\n.modal-content {\r\n  background-color: white;\r\n  text-align: center;\r\n  height: 100%;\r\n  width: 100%;\r\n  border: 2px solid black; /* 添加边框线 */\r\n  border-radius: 10px; /* 为边框添加圆角 */\r\n}\r\n\r\nbutton {\r\n  margin-top: 20px;\r\n}\r\n.nav-bar {\r\n  width: 200px;\r\n  height: 100%;\r\n  position: fixed;\r\n  background-color:#3131FF ;\r\n  color: white;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.container {\r\n\r\n  margin-left:20px;\r\n /* 使容器占满整个视口高度 */\r\n  width: 100%; /* 沾满整个视口宽度 */\r\n/* 根据需要添加内边距 */\r\n}\r\n</style>"],"mappings":"AAqCA,OAAOA,WAAU,MAAO,mBAAmB;AAC3C,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,mBAAmB;EACzBC,UAAU,EAAE;IACVH;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,CACR;QAAEC,EAAE,EAAE,CAAC;QAAEC,KAAK,EAAE,KAAK;QAAEC,OAAO,EAAE,cAAc;QAAEC,IAAI,EAAE,kBAAkB;QAAEC,MAAM,EAAE;MAAM;MACxF;MAAA,CACD;MACDC,WAAW,EAAE,KAAK;MAClBC,OAAO,EAAE,CAAC,CAAC;MACXC,UAAU,EAAE,IAAI,CAAE;IACpB,CAAC;EACH,CAAC;EAGDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,wBAAwB,CAAC,CAAC,EAAE;EACnC,CAAC;EACDC,aAAaA,CAAA,EAAG;IACd,IAAI,IAAI,CAACH,UAAU,EAAE;MACnBI,aAAa,CAAC,IAAI,CAACJ,UAAU,CAAC,EAAE;IAClC;EACF,CAAC;EAEDK,OAAO,EAAE;IACPC,qBAAqBA,CAACP,OAAO,EAAE;MAC7B,IAAI,CAACA,OAAM,GAAIA,OAAO;MACtB,IAAI,CAACD,WAAU,GAAI,IAAI;IACzB,CAAC;IACDS,YAAYA,CAAA,EAAG;MACb,IAAI,CAACT,WAAU,GAAI,KAAK;IAC1B,CAAC;IACDI,wBAAwBA,CAAA,EAAG;MACzB,IAAI,CAACF,UAAS,GAAIQ,WAAW,CAAC,MAAM;QAClC,IAAI,CAACC,aAAa,CAAC,CAAC;MACtB,CAAC,EAAE,KAAK,CAAC,EAAE;IACb,CAAC;IACDA,aAAaA,CAAA,EAAG;MACd;MACArB,KAAK,CAACsB,GAAG,CAAC,eAAe,EACtBC,IAAI,CAACC,QAAO,IAAK;QAChB,MAAMC,WAAU,GAAID,QAAQ,CAACrB,IAAI;QACjC,IAAI,CAACC,QAAO,GAAI,CAAC,GAAG,IAAI,CAACA,QAAQ,EAAE,GAAGqB,WAAW,CAAC;MACpD,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
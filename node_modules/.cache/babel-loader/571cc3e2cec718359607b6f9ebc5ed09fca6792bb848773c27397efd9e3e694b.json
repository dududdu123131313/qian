{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\nexport default {\n  name: 'loginComponent',\n  setup() {\n    const router = useRouter();\n    function navigate(event) {\n      event.preventDefault();\n      const path = event.target.getAttribute('to');\n      router.push(path);\n    }\n    return {\n      navigate\n    };\n  },\n  data() {\n    return {\n      isSignUpActive: false,\n      signup: {\n        phoneNumber: '',\n        passWord: '',\n        verificationCode: ''\n      },\n      login: {\n        accountName: '',\n        passWord: ''\n      }\n    };\n  },\n  methods: {\n    togglePanel(panel) {\n      this.isSignUpActive = panel === 'register';\n    },\n    // 处理登录逻辑，使用axios发送POST请求\n    handleLogin() {\n      const {\n        accountName,\n        passWord\n      } = this.login;\n      if (accountName && passWord) {\n        // 判断输入的是否为手机号格式，这里简单以是否纯数字且长度合适来判断，实际可能需更严谨验证\n        const isPhoneNumber = /^\\d{11}$/.test(accountName);\n        let loginUrl = isPhoneNumber ? '/api/users/login/phone' : 'http://10.3.83.194:8088/users/login/account';\n        const loginData = isPhoneNumber ? {\n          phoneNumber: accountName,\n          passWord: passWord\n        } : {\n          accountName: accountName,\n          passWord: passWord\n        };\n        axios.post(loginUrl, loginData, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(response => {\n          if (response.status >= 200 && response.status < 300) {\n            alert('登录成功！');\n            window.location.href = '/home';\n          } else {\n            throw new Error('登录失败');\n          }\n        }).catch(error => {\n          console.error('Error:', error);\n          alert('登录失败，请检查您的信息或网络连接。');\n        });\n      } else {\n        alert('请填写所有必填项！');\n      }\n    },\n    requestVerificationCode() {\n      const {\n        phoneNumber\n      } = this.signup;\n      if (phoneNumber) {\n        axios.post('https://your-backend-api-url/send-verification-code', {\n          phoneNumber: phoneNumber\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(response => {\n          if (response.data.success) {\n            alert('验证码已发送，请查收！');\n          } else {\n            alert('发送验证码失败，请稍后再试。');\n          }\n        }).catch(error => {\n          console.error('Error:', error);\n          alert('网络错误，请检查您的连接。');\n        });\n      } else {\n        alert('请输入手机号码！');\n      }\n    },\n    goToResetPassword() {\n      window.location.href = \"/resetPassWord\";\n    },\n    goToRegister() {\n      this.$router.push('/register');\n    }\n  }\n};","map":{"version":3,"names":["useRouter","axios","name","setup","router","navigate","event","preventDefault","path","target","getAttribute","push","data","isSignUpActive","signup","phoneNumber","passWord","verificationCode","login","accountName","methods","togglePanel","panel","handleLogin","isPhoneNumber","test","loginUrl","loginData","post","headers","then","response","status","alert","window","location","href","Error","catch","error","console","requestVerificationCode","success","goToResetPassword","goToRegister","$router"],"sources":["D:\\huawei\\qian\\src\\components\\LoginComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"container left-panel-active\" id=\"loginComponent\">\r\n    <!-- 登录 -->\r\n\r\n    <div class=\"container__form container--signin\">\r\n      <form @submit.prevent=\"handleLogin\" class=\"form\" id=\"form2\">\r\n        <h2 class=\"form__title\">登录账号</h2>\r\n        <input v-model=\"login.accountName\" type=\"text\" placeholder=\"用户名/手机号\" class=\"input\" />\r\n        <input v-model=\"login.passWord\" type=\"password\" placeholder=\"密码\" class=\"input\" />\r\n        <a class=\"link\" id=\"forgetPassword\" @click=\"goToResetPassword\">忘记密码?</a>\r\n        <button @click=\"togglePanel('login')\" class=\"btn\" id=\"login\">登 录</button>\r\n      </form>\r\n    </div>\r\n\r\n    <!-- 覆盖层 -->\r\n    <div class=\"container__overlay\">\r\n      <div class=\"overlay\">\r\n        <div class=\"overlay__panel overlay--right\">\r\n          <button  class=\"btn\" id=\"signIn\" @click=\"goToRegister\">注册账号</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useRouter } from 'vue-router';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'loginComponent',\r\n  setup() {\r\n    const router = useRouter();\r\n\r\n    function navigate(event) {\r\n      event.preventDefault();\r\n      const path = event.target.getAttribute('to');\r\n      router.push(path);\r\n    }\r\n\r\n    return {\r\n      navigate\r\n    };\r\n  },\r\n  data() {\r\n    return {\r\n      isSignUpActive: false,\r\n      signup: {\r\n        phoneNumber: '',\r\n        passWord: '',\r\n        verificationCode: ''\r\n      },\r\n      login: {\r\n        accountName: '',\r\n        passWord: ''\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    togglePanel(panel) {\r\n      this.isSignUpActive = panel === 'register';\r\n    },\r\n\r\n    // 处理登录逻辑，使用axios发送POST请求\r\n    handleLogin() {\r\n      const { accountName, passWord } = this.login;\r\n      if (accountName && passWord) {\r\n        // 判断输入的是否为手机号格式，这里简单以是否纯数字且长度合适来判断，实际可能需更严谨验证\r\n        const isPhoneNumber = /^\\d{11}$/.test(accountName);\r\n        let loginUrl = isPhoneNumber? '/api/users/login/phone' : 'http://10.3.83.194:8088/users/login/account';\r\n        const loginData = isPhoneNumber? { phoneNumber: accountName, passWord: passWord } : { accountName: accountName, passWord: passWord };\r\n        axios.post(loginUrl, loginData, {\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n            .then(response => {\r\n              if (response.status >= 200 && response.status < 300) {\r\n                alert('登录成功！');\r\n                window.location.href = '/home';\r\n              } else {\r\n                throw new Error('登录失败');\r\n              }\r\n            })\r\n            .catch(error => {\r\n              console.error('Error:', error);\r\n              alert('登录失败，请检查您的信息或网络连接。');\r\n            });\r\n      } else {\r\n        alert('请填写所有必填项！');\r\n      }\r\n    },\r\n\r\n    requestVerificationCode() {\r\n      const { phoneNumber } = this.signup;\r\n      if (phoneNumber) {\r\n        axios.post('https://your-backend-api-url/send-verification-code', {\r\n          phoneNumber: phoneNumber\r\n        }, {\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n            .then(response => {\r\n              if (response.data.success) {\r\n                alert('验证码已发送，请查收！');\r\n              } else {\r\n                alert('发送验证码失败，请稍后再试。');\r\n              }\r\n            })\r\n            .catch(error => {\r\n              console.error('Error:', error);\r\n              alert('网络错误，请检查您的连接。');\r\n            });\r\n      } else {\r\n        alert('请输入手机号码！');\r\n      }\r\n    },\r\n\r\n    goToResetPassword() {\r\n      window.location.href = \"/resetPassWord\";\r\n    },\r\n\r\n    goToRegister() {\r\n      this.$router.push('/register');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* 保持原有的样式不变 */\r\n:root {\r\n  /* COLORS */\r\n  --white: #F5F7FF;\r\n  --gray: #333;\r\n  --blue: #3161FF;\r\n  --lightblue: #3161F2;\r\n\r\n  /* RADII */\r\n  --button-radius: 0.7rem;\r\n\r\n  /* SIZES */\r\n  --max-width: 700px;\r\n  --max-height: 373px;\r\n\r\n  font-size: 16px;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\r\n  Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\r\n}\r\ntemplate {\r\n  align-items: center;\r\n  background-color: var(--white);\r\n  background-attachment: fixed;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  display: grid;\r\n  height: 100vh;\r\n  place-items: center;\r\n}\r\n\r\n.form__title {\r\n  font-weight: 300;\r\n  margin: 0;\r\n  margin-bottom: 1.25rem;\r\n}\r\n\r\n.link {\r\n  color: var(--blue);\r\n  font-size: 0.9rem;\r\n  margin: 1.5rem 0;\r\n  text-decoration: none;\r\n}\r\n.link:hover {\r\n  text-decoration: underline; /* 鼠标悬停时添加下划线 */\r\n}\r\n\r\n.container {\r\n  background-color: var(--white);\r\n  border-radius: var(--button-radius);\r\n  box-shadow: 0 0.9rem 1.7rem rgba(0, 0, 0, 0.25),\r\n  0 0.7rem 0.7rem rgba(0, 0, 0, 0.22);\r\n  height: var(--max-height);\r\n  max-width: var(--max-width);\r\n  overflow: hidden;\r\n  position: relative;\r\n  /*让容器居中*/\r\n  margin: auto auto;\r\n  /*让容器垂直居中*/\r\n  top: 50%;\r\n  transform: translateY(60%);\r\n  width: 100%;\r\n}\r\n\r\n.container__form {\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  transition: all 0.6s ease-in-out;\r\n}\r\n\r\n.container--signin {\r\n  left: 0;\r\n  width: 50%;\r\n  z-index: 2;\r\n}\r\n\r\n.container.right-panel-active .container--signin {\r\n  transform: translateX(100%);\r\n}\r\n\r\n.container--signup {\r\n  left: 0;\r\n  opacity: 0;\r\n  width: 50%;\r\n  z-index: 1;\r\n}\r\n\r\n.container.right-panel-active .container--signup {\r\n  animation: show 0.6s;\r\n  opacity: 1;\r\n  transform: translateX(100%);\r\n  z-index: 5;\r\n}\r\n\r\n.container__overlay {\r\n  height: 100%;\r\n  left: 50%;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  top: 0;\r\n  transition: transform 0.6s ease-in-out;\r\n  width: 50%;\r\n  z-index: 100;\r\n}\r\n\r\n.container.right-panel-active .container__overlay {\r\n  transform: translateX(-100%);\r\n}\r\n\r\n.overlay {\r\n  background-color: var(--lightblue);\r\n  background: url(\"http://localhost:63342/hosptial-vue/vue/public/images/background1.jpg\");\r\n  background-attachment: fixed;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  height: 100%;\r\n  left: -100%;\r\n  position: relative;\r\n  transform: translateX(0);\r\n  transition: transform 0.6s ease-in-out;\r\n  width: 200%;\r\n}\r\n\r\n.container.right-panel-active .overlay {\r\n  transform: translateX(50%);\r\n}\r\n\r\n.overlay__panel {\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  justify-content: center;\r\n  position: absolute;\r\n  text-align: center;\r\n  top: 0;\r\n  transform: translateX(0);\r\n  transition: transform 0.6s ease-in-out;\r\n  width: 50%;\r\n}\r\n\r\n.overlay--left {\r\n  transform: translateX(-20%);\r\n}\r\n\r\n.container.right-panel-active .overlay--left {\r\n  transform: translateX(0);\r\n}\r\n\r\n.overlay--right {\r\n  right: 0;\r\n  transform: translateX(0);\r\n}\r\n\r\n.container.right-panel-active .overlay--right {\r\n  transform: translateX(20%);\r\n}\r\n\r\n.btn {\r\n  background-color: var(--blue);\r\n  background-image: linear-gradient(90deg, var(--blue) 0%, var(--lightblue) 74%);\r\n  border-radius: 20px;\r\n  border: 1px solid var(--blue);\r\n  color: var(--white);\r\n  cursor: pointer;\r\n  font-size: 0.8rem;\r\n  font-weight: bold;\r\n  letter-spacing: 0.1rem;\r\n  padding: 0.9rem 4rem;\r\n  text-transform: uppercase;\r\n  transition: transform 80ms ease-in;\r\n}\r\n\r\n.form>.btn {\r\n  margin-top: 1.5rem;\r\n}\r\n\r\n.btn:active {\r\n  transform: scale(0.95);\r\n}\r\n\r\n.btn:focus {\r\n  outline: none;\r\n}\r\n\r\n.form {\r\n  background-color: var(--white);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  padding: 0 3rem;\r\n  height: 100%;\r\n  text-align: center;\r\n}\r\n\r\n.input {\r\n  background-color: #fff;\r\n  border: none;\r\n  padding: 0.9rem 0.9rem;\r\n  margin: 0.5rem 0;\r\n  width: 100%;\r\n  border-radius: var(--button-radius);\r\n}\r\n.get-verification-code {\r\n  color: var(--blue); /* 蓝色文字 */\r\n  cursor: pointer; /* 鼠标指针变为手型 */\r\n  margin-left: 0.5rem; /* 左边距 */\r\n}\r\n.get-verification-code:hover {\r\n  text-decoration: underline; /* 鼠标悬停时添加下划线 */\r\n}\r\n\r\n@keyframes show {\r\n\r\n  0%,\r\n  49.99% {\r\n    opacity: 0;\r\n    z-index: 1;\r\n  }\r\n\r\n  50%,\r\n  100% {\r\n    opacity: 1;\r\n    z-index: 5;\r\n  }\r\n}\r\n\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
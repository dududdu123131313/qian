{"version":3,"file":"js/141.a6d843b5.js","mappings":"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","sources":["webpack://login-vue/./src/components/RegistrationComponent.vue","webpack://login-vue/./src/components/DoctorInfo.vue","webpack://login-vue/./src/components/DoctorInfo.vue?eaea","webpack://login-vue/./src/components/RegistrationComponent.vue?e8e9"],"sourcesContent":["<!-- RegistrationComponent.vue -->\r\n<template>\r\n  <div class=\"container\">\r\n    <h1 class=\"title\">预约挂号</h1>\r\n        <div class=\"selection-container\">\r\n      <!-- 选择科室 -->\r\n      <div class=\"selection-row\">\r\n        <span>选择科室：</span>\r\n        <button v-for=\"department in departments\" :key=\"department\" @click=\"selectDepartment(department)\">\r\n          {{ department }}\r\n        </button>\r\n        <input type=\"text\" v-model=\"selectedDepartment\" class=\"selection-input\" />\r\n      </div>\r\n      <!-- 选择类型 -->\r\n      <div class=\"selection-row\">\r\n        <span>选择类型：</span>\r\n        <button v-for=\"type in types\" :key=\"type\" @click=\"selectType(type)\">\r\n          {{ type }}\r\n        </button>\r\n        <input type=\"text\" v-model=\"selectedType\" class=\"selection-input\" />\r\n      </div>\r\n      <!-- 选择日期 -->\r\n      <div class=\"selection-row\">\r\n        <span>选择日期：</span>\r\n        <button v-for=\"date in dates\" :key=\"date\" @click=\"selectDate(date)\">\r\n          {{ date }}\r\n        </button>\r\n        <input type=\"text\" v-model=\"selectedDate\" class=\"selection-input\" />\r\n      </div>\r\n    <!-- 查询按钮 -->\r\n    <button class=\"query-button\" @click=\"handleQuery\" >查询</button>\r\n    </div>\r\n\r\n  \r\n\r\n    <!-- 结果容器 -->\r\n    <div class=\"results-container\">\r\n      <div class=\"results\" v-if=\"doctors.length\">\r\n        <doctor-info\r\n          v-for=\"doctor in doctors\"\r\n          :key=\"doctor.id\"\r\n          :doctor=\"doctor\"\r\n        ></doctor-info>\r\n      </div>\r\n      <div class=\"no-results\" v-else>\r\n        <p>没有找到相关数据。</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport DoctorInfo from './DoctorInfo.vue';\r\n\r\nexport default {\r\n  components: {\r\n    DoctorInfo\r\n  },\r\n  data() {\r\n    return {\r\n      departments: ['康复科', '普外科', '中医科', '眼科', '口腔科', '皮肤科', '骨科', '风湿免疫科', '肿瘤科', '心内科', '传染科', '妇产科', '呼吸内科',\r\n        '儿科', '血液科', '泌尿外科', '耳鼻喉科', '神经内科', '急诊科', '内分泌科'],\r\n      types: ['专家门诊', '普通门诊'],\r\n      selectedDepartment: '',\r\n      selectedType: '',\r\n      selectedDate: '',\r\n      dates: [],\r\n      doctors: [],\r\n      showResults: false,\r\n\r\n    };\r\n  },\r\n  created() {\r\n    this.dates = this.generateDates(5);\r\n  },\r\n  methods: {\r\n    selectDepartment(department) {\r\n      this.selectedDepartment = department;\r\n    },\r\n    selectType(type) {\r\n      this.selectedType = type;\r\n    },\r\n    selectDate(date) {\r\n      this.selectedDate = date;\r\n    },\r\n    handleQuery() {\r\n      const encodedDepartment = encodeURIComponent(this.selectedDepartment);\r\n      const encodedType = encodeURIComponent(this.selectedType);\r\n      const encodedDate = encodeURIComponent(this.selectedDate);\r\n\r\n      // 验证日期格式是否正确\r\n      if (this.selectedDate && !/^\\d{4}-\\d{2}-\\d{2}$/.test(this.selectedDate)) {\r\n        alert('请输入正确的日期格式（例如：YYYY-MM-DD）');\r\n        return;\r\n      }\r\n\r\n\r\n      const queryUrl = `/doctors/query?department=${encodedDepartment}&outpatientType=${encodedType}&visitTime=${encodedDate}`;\r\n      axios.get(queryUrl)\r\n          .then(response => {\r\n            this.doctors = response.data;\r\n            this.showResults = true;\r\n          })\r\n          .catch(error => {\r\n            console.error('Error fetching doctor info:', error);\r\n            if (error.response) {\r\n              alert('查询失败，请稍后重试。错误信息：' + error.response.data);\r\n            } else {\r\n              alert('网络连接异常，请检查网络后重试。');\r\n            }\r\n          });\r\n    },\r\n\r\n\r\n    generateDates(days) {\r\n      const dates = [];\r\n      const today = new Date();\r\n      for (let i = 0; i < days; i++) {\r\n        const nextDay = new Date(today);\r\n        nextDay.setDate(today.getDate() + i);\r\n        const year = nextDay.getFullYear();\r\n        const month = (nextDay.getMonth() + 1).toString().padStart(2, '0');\r\n        const day = nextDay.getDate().toString().padStart(2, '0');\r\n        dates.push(`${year}-${month}-${day}`);\r\n      }\r\n      return dates;\r\n    }\r\n  }\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start; \r\n  align-items: center;\r\n  margin-left:20px;\r\n  height: 100%; \r\n  width: 100%;\r\n  box-sizing: border-box; \r\n  padding: 20px;\r\n}\r\n\r\n.title {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.selection-container {\r\n  border: 1px solid #ddd;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  width: 90%;\r\n  margin-bottom: 20px;\r\n  background-color: white;\r\n}\r\n\r\n.selection-row {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n  flex-wrap: wrap; /* 允许子元素换行 */\r\n}\r\n\r\n.selection-row button {\r\n  padding: 8px 16px; /* 按钮内边距 */\r\n  margin: 4px; /* 按钮外边距 */\r\n  border: 1px solid #ccc; /* 按钮边框 */\r\n  border-radius: 4px; /* 按钮圆角 */\r\n  background-color: #f8f8f8; /* 按钮背景颜色 */\r\n  cursor: pointer; /* 鼠标悬停时显示指针 */\r\n  flex: 1 1 auto; /* 允许按钮占据可用空间 */\r\n  min-width: 80px; /* 按钮的最小宽度 */\r\n  text-align: center; /* 文本居中 */\r\n}\r\n\r\n.selection-input {\r\n  margin-left: 10px;\r\n  border: 1px solid #ccc;\r\n  padding: 5px;\r\n  border-radius: 4px;\r\n  width: 200px;\r\n  margin-left: auto;\r\n}\r\n\r\n.query-button {\r\n  padding: 10px 20px;\r\n  border: none;\r\n  background-color: #3161FF;\r\n  color: #ffffff;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  margin-top: 20px; /* 添加上边距 */\r\n  display: block; /* 使按钮表现为块级元素 */\r\n  margin-left: auto; /* 右边距自动 */\r\n  margin-right: auto; /* 左边距自动 */\r\n  width: fit-content; /* 宽度适应内容 */\r\n}\r\n\r\n.query-button:hover {\r\n  background-color: #304add;\r\n}\r\n\r\n\r\n.results-container {\r\n  width: 90%;\r\n  height: 100%;\r\n  margin-top: 20px;\r\n  padding: 20px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  background-color: #f9f9f9;\r\n}\r\n\r\n.results {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  display: flex;\r\n  justify-content: flex-start; /* 水平排列，从左到右 */\r\n  gap: 20px;\r\n}\r\n\r\n.doctor-info {\r\n  flex: 1 1 300px;\r\n  margin: 10px;\r\n  border: 0;\r\n  padding: 0;\r\n  border-radius: 0;\r\n  background-color: transparent;\r\n}\r\n\r\n.no-results {\r\n  color: #999;\r\n  text-align: center;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n</style>","<template>\r\n  <div class=\"doctor-box\">\r\n    <div class=\"doctor-info\">\r\n      <div class=\"doctor-profile\">\r\n        <img :src=\"doctorImage\" alt=\"doctor photo\" />\r\n        <div>\r\n          <h3>{{ doctor.name }}</h3>\r\n          <p>{{ doctor.department }}</p>\r\n          <p>{{ doctor.outpatientType }}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"appointment-options\">\r\n        <p>可预约时间：{{ formatDateTime(doctor.visitTime) }}</p>\r\n        <!-- 显示剩余号数 -->\r\n        <p v-if=\"doctor.remainingNumbers > 0\">剩余号数：{{ doctor.remainingNumbers }}</p>\r\n        <button @click=\"showAppointmentModal = true\">预约</button>\r\n      </div>\r\n    </div>\r\n    <div class=\"fee\">挂号费 {{ doctor.cost }}元</div>\r\n  </div>\r\n\r\n  <!-- 模态窗口 -->\r\n  <div v-if=\"showAppointmentModal\" class=\"modal\">\r\n    <div class=\"modal-content\">\r\n      <span class=\"close\" @click=\"showAppointmentModal = false\">&times;</span>\r\n      <h2>预约医生：{{ doctor.name }}</h2>\r\n      <p>科室：{{ doctor.department }}</p>\r\n      <p>类型：{{ doctor.outpatientType }}</p>\r\n      <p>可预约时间：{{ formatDateTime(doctor.visitTime) }}</p>\r\n      <!-- 显示剩余号数 -->\r\n      <p v-if=\"doctor.remainingNumbers > 0\">剩余号数：{{ doctor.remainingNumbers }}</p>\r\n      <!-- 显示挂号费 -->\r\n      <p>挂号费：{{ doctor.cost }}元</p>\r\n      <p>挂号人：{{ userInfo.name }}</p>\r\n\r\n      <!--<label for=\"patient\">选择挂号人：</label>\r\n      <select id=\"patient\" v-model=\"selectedPatient\">\r\n        <option disabled value=\"\">请选择</option>\r\n        <option v-for=\"patient in patients\" :key=\"patient.id\" :value=\"patient\">{{ patient.name }}</option>\r\n      </select> -->\r\n\r\n\r\n      <!-- 支付按钮 -->\r\n      <button class=\"payment-button\" @click=\"handlePayment\">支付</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport doctorImage from '@/assets/doctor.png';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  props: {\r\n    doctor: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      doctorImage: doctorImage,\r\n      showAppointmentModal: false,\r\n      selectedPatient: '',\r\n      patients: [\r\n        { id: 2, name: '李昊' },\r\n        { id: 3, name: '李四' },\r\n        { id: 1, name: '王五' }\r\n      ]\r\n    };\r\n  },\r\n  computed: {\r\n    // 从个人中心获取用户名、姓名和电话\r\n    userInfo() {\r\n      return this.$store.state.userInfo;\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    bookAppointment(doctor) {\r\n      alert(`预约${doctor.name}在${doctor.VisitTime}`);\r\n    },\r\n    handlePayment() {\r\n    \r\n        const registrationTime = new Date();\r\n        registrationTime.setHours(registrationTime.getHours() + 8);\r\n        // 构建要发送到后端的数据对象\r\n        const RegistrationList = {\r\n          name:  this.userInfo.name ,\r\n          age: '18', // 假设年龄信息需要从其他地方获取\r\n          phoneNumber: this.userInfo.phonenumber, // 假设电话号码信息需要从其他地方获取\r\n          department: this.doctor.department,\r\n          visitTime: this.doctor.visitTime,\r\n          registrationTime:  registrationTime.toISOString(),\r\n          doctor_Name: this.doctor.name,\r\n          outpatientType: this.doctor.outpatientType,\r\n          accountName: this.userInfo.accountName, // 假设你有一个方法来获取当前登录用户的用户名\r\n        };\r\n\r\n        // 使用 axios 发送 POST 请求到后端\r\n        axios.post('/registrationLists/addRegistration', RegistrationList)\r\n          .then(response => {\r\n            // 请求成功，处理响应\r\n            console.log('Appointment successful:', response.data);\r\n            alert('预约成功！');\r\n            this.showAppointmentModal = false; // 关闭模态框\r\n          })\r\n          .catch(error => {\r\n            // 请求失败，处理错误\r\n            console.error('Appointment failed:', error.response || error.message);\r\n            alert('预约失败，请重试。');\r\n          });\r\n      \r\n    },\r\n    formatDateTime(dateTimeString) {\r\n      const date = new Date(dateTimeString);\r\n      const year = date.getFullYear();\r\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n      const day = date.getDate().toString().padStart(2, '0');\r\n      const hours = date.getHours().toString().padStart(2, '0');\r\n      const minutes = date.getMinutes().toString().padStart(2, '0');\r\n\r\n      return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.doctor-box {\r\n  width: 30%;\r\n  min-width: 240px;\r\n  border: 1px solid #ddd;\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.doctor-profile {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.doctor-profile img {\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  margin-right: 20px;\r\n}\r\n\r\n.appointment-options {\r\n  margin-top: 20px;\r\n}\r\n\r\n.fee {\r\n  margin-top: 20px;\r\n  font-weight: bold;\r\n}\r\n\r\n.modal {\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-content {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  width: 300px;\r\n}\r\n\r\n.close {\r\n  float: right;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n}\r\n\r\n/* 支付按钮样式 */\r\n.payment-button {\r\n  background-color: #3161FF; /* 蓝色背景 */\r\n  color: #ffffff; /* 白色文字 */\r\n  padding: 10px 20px; /* 内边距 */\r\n  border: none; /* 无边框 */\r\n  border-radius: 5px; /* 圆角 */\r\n  cursor: pointer; /* 鼠标指针 */\r\n  font-size: 16px; /* 文字大小 */\r\n  margin-top: 10px; /* 外边距 */\r\n  float: right;\r\n}\r\n\r\n.payment-button:hover {\r\n  background-color: #2980b9; /* 鼠标悬停时的背景颜色 */\r\n}\r\n</style>","import { render } from \"./DoctorInfo.vue?vue&type=template&id=3d10f1e2&scoped=true\"\nimport script from \"./DoctorInfo.vue?vue&type=script&lang=js\"\nexport * from \"./DoctorInfo.vue?vue&type=script&lang=js\"\n\nimport \"./DoctorInfo.vue?vue&type=style&index=0&id=3d10f1e2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3d10f1e2\"]])\n\nexport default __exports__","import { render } from \"./RegistrationComponent.vue?vue&type=template&id=ee383a78&scoped=true\"\nimport script from \"./RegistrationComponent.vue?vue&type=script&lang=js\"\nexport * from \"./RegistrationComponent.vue?vue&type=script&lang=js\"\n\nimport \"./RegistrationComponent.vue?vue&type=style&index=0&id=ee383a78&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-ee383a78\"]])\n\nexport default __exports__"],"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_Fragment","_renderList","$data","departments","department","onClick","$event","$options","selectDepartment","_hoisted_4","type","_cache","selectedDepartment","_hoisted_5","types","selectType","_hoisted_6","selectedType","_hoisted_7","dates","date","selectDate","_hoisted_8","selectedDate","args","handleQuery","_hoisted_9","doctors","length","_hoisted_10","doctor","_createBlock","_component_doctor_info","id","_hoisted_11","src","doctorImage","alt","_toDisplayString","$props","name","outpatientType","formatDateTime","visitTime","remainingNumbers","_createCommentVNode","showAppointmentModal","cost","userInfo","handlePayment","props","Object","required","data","selectedPatient","patients","computed","this","$store","state","methods","bookAppointment","alert","VisitTime","registrationTime","Date","setHours","getHours","RegistrationList","age","phoneNumber","phonenumber","toISOString","doctor_Name","accountName","axios","post","then","response","console","log","catch","error","message","dateTimeString","year","getFullYear","month","getMonth","toString","padStart","day","getDate","hours","minutes","getMinutes","__exports__","components","DoctorInfo","showResults","created","generateDates","encodedDepartment","encodeURIComponent","encodedType","encodedDate","test","queryUrl","get","days","today","i","nextDay","setDate","push","render"],"sourceRoot":""}
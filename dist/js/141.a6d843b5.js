"use strict";(self["webpackChunklogin_vue"]=self["webpackChunklogin_vue"]||[]).push([[141],{5277:function(e,t,o){o.r(t),o.d(t,{default:function(){return R}});var n=o(6768),s=o(4232),a=o(5130);const r={class:"container"},l={class:"selection-container"},c={class:"selection-row"},i=["onClick"],d={class:"selection-row"},u=["onClick"],p={class:"selection-row"},m=["onClick"],k={class:"results-container"},h={key:0,class:"results"},v={key:1,class:"no-results"};function g(e,t,o,g,y,L){const D=(0,n.g2)("doctor-info");return(0,n.uX)(),(0,n.CE)("div",r,[t[8]||(t[8]=(0,n.Lk)("h1",{class:"title"},"预约挂号",-1)),(0,n.Lk)("div",l,[(0,n.Lk)("div",c,[t[4]||(t[4]=(0,n.Lk)("span",null,"选择科室：",-1)),((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(y.departments,(e=>((0,n.uX)(),(0,n.CE)("button",{key:e,onClick:t=>L.selectDepartment(e)},(0,s.v_)(e),9,i)))),128)),(0,n.bo)((0,n.Lk)("input",{type:"text","onUpdate:modelValue":t[0]||(t[0]=e=>y.selectedDepartment=e),class:"selection-input"},null,512),[[a.Jo,y.selectedDepartment]])]),(0,n.Lk)("div",d,[t[5]||(t[5]=(0,n.Lk)("span",null,"选择类型：",-1)),((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(y.types,(e=>((0,n.uX)(),(0,n.CE)("button",{key:e,onClick:t=>L.selectType(e)},(0,s.v_)(e),9,u)))),128)),(0,n.bo)((0,n.Lk)("input",{type:"text","onUpdate:modelValue":t[1]||(t[1]=e=>y.selectedType=e),class:"selection-input"},null,512),[[a.Jo,y.selectedType]])]),(0,n.Lk)("div",p,[t[6]||(t[6]=(0,n.Lk)("span",null,"选择日期：",-1)),((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(y.dates,(e=>((0,n.uX)(),(0,n.CE)("button",{key:e,onClick:t=>L.selectDate(e)},(0,s.v_)(e),9,m)))),128)),(0,n.bo)((0,n.Lk)("input",{type:"text","onUpdate:modelValue":t[2]||(t[2]=e=>y.selectedDate=e),class:"selection-input"},null,512),[[a.Jo,y.selectedDate]])]),(0,n.Lk)("button",{class:"query-button",onClick:t[3]||(t[3]=(...e)=>L.handleQuery&&L.handleQuery(...e))},"查询")]),(0,n.Lk)("div",k,[y.doctors.length?((0,n.uX)(),(0,n.CE)("div",h,[((0,n.uX)(!0),(0,n.CE)(n.FK,null,(0,n.pI)(y.doctors,(e=>((0,n.uX)(),(0,n.Wv)(D,{key:e.id,doctor:e},null,8,["doctor"])))),128))])):((0,n.uX)(),(0,n.CE)("div",v,t[7]||(t[7]=[(0,n.Lk)("p",null,"没有找到相关数据。",-1)])))])])}o(4114);var y=o(4373);const L={class:"doctor-box"},D={class:"doctor-info"},f={class:"doctor-profile"},C=["src"],_={class:"appointment-options"},b={key:0},T={class:"fee"},I={key:0,class:"modal"},w={class:"modal-content"},E={key:0};function X(e,t,o,a,r,l){return(0,n.uX)(),(0,n.CE)(n.FK,null,[(0,n.Lk)("div",L,[(0,n.Lk)("div",D,[(0,n.Lk)("div",f,[(0,n.Lk)("img",{src:r.doctorImage,alt:"doctor photo"},null,8,C),(0,n.Lk)("div",null,[(0,n.Lk)("h3",null,(0,s.v_)(o.doctor.name),1),(0,n.Lk)("p",null,(0,s.v_)(o.doctor.department),1),(0,n.Lk)("p",null,(0,s.v_)(o.doctor.outpatientType),1)])]),(0,n.Lk)("div",_,[(0,n.Lk)("p",null,"可预约时间："+(0,s.v_)(l.formatDateTime(o.doctor.visitTime)),1),o.doctor.remainingNumbers>0?((0,n.uX)(),(0,n.CE)("p",b,"剩余号数："+(0,s.v_)(o.doctor.remainingNumbers),1)):(0,n.Q3)("",!0),(0,n.Lk)("button",{onClick:t[0]||(t[0]=e=>r.showAppointmentModal=!0)},"预约")])]),(0,n.Lk)("div",T,"挂号费 "+(0,s.v_)(o.doctor.cost)+"元",1)]),r.showAppointmentModal?((0,n.uX)(),(0,n.CE)("div",I,[(0,n.Lk)("div",w,[(0,n.Lk)("span",{class:"close",onClick:t[1]||(t[1]=e=>r.showAppointmentModal=!1)},"×"),(0,n.Lk)("h2",null,"预约医生："+(0,s.v_)(o.doctor.name),1),(0,n.Lk)("p",null,"科室："+(0,s.v_)(o.doctor.department),1),(0,n.Lk)("p",null,"类型："+(0,s.v_)(o.doctor.outpatientType),1),(0,n.Lk)("p",null,"可预约时间："+(0,s.v_)(l.formatDateTime(o.doctor.visitTime)),1),o.doctor.remainingNumbers>0?((0,n.uX)(),(0,n.CE)("p",E,"剩余号数："+(0,s.v_)(o.doctor.remainingNumbers),1)):(0,n.Q3)("",!0),(0,n.Lk)("p",null,"挂号费："+(0,s.v_)(o.doctor.cost)+"元",1),(0,n.Lk)("p",null,"挂号人："+(0,s.v_)(l.userInfo.name),1),(0,n.Lk)("button",{class:"payment-button",onClick:t[2]||(t[2]=(...e)=>l.handlePayment&&l.handlePayment(...e))},"支付")])])):(0,n.Q3)("",!0)],64)}var $=o.p+"img/doctor.f8a47a90.png",S={props:{doctor:{type:Object,required:!0}},data(){return{doctorImage:$,showAppointmentModal:!1,selectedPatient:"",patients:[{id:2,name:"李昊"},{id:3,name:"李四"},{id:1,name:"王五"}]}},computed:{userInfo(){return this.$store.state.userInfo}},methods:{bookAppointment(e){alert(`预约${e.name}在${e.VisitTime}`)},handlePayment(){const e=new Date;e.setHours(e.getHours()+8);const t={name:this.userInfo.name,age:"18",phoneNumber:this.userInfo.phonenumber,department:this.doctor.department,visitTime:this.doctor.visitTime,registrationTime:e.toISOString(),doctor_Name:this.doctor.name,outpatientType:this.doctor.outpatientType,accountName:this.userInfo.accountName};y.A.post("/registrationLists/addRegistration",t).then((e=>{console.log("Appointment successful:",e.data),alert("预约成功！"),this.showAppointmentModal=!1})).catch((e=>{console.error("Appointment failed:",e.response||e.message),alert("预约失败，请重试。")}))},formatDateTime(e){const t=new Date(e),o=t.getFullYear(),n=(t.getMonth()+1).toString().padStart(2,"0"),s=t.getDate().toString().padStart(2,"0"),a=t.getHours().toString().padStart(2,"0"),r=t.getMinutes().toString().padStart(2,"0");return`${o}-${n}-${s} ${a}:${r}`}}},A=o(1241);const M=(0,A.A)(S,[["render",X],["__scopeId","data-v-3d10f1e2"]]);var N=M,F={components:{DoctorInfo:N},data(){return{departments:["康复科","普外科","中医科","眼科","口腔科","皮肤科","骨科","风湿免疫科","肿瘤科","心内科","传染科","妇产科","呼吸内科","儿科","血液科","泌尿外科","耳鼻喉科","神经内科","急诊科","内分泌科"],types:["专家门诊","普通门诊"],selectedDepartment:"",selectedType:"",selectedDate:"",dates:[],doctors:[],showResults:!1}},created(){this.dates=this.generateDates(5)},methods:{selectDepartment(e){this.selectedDepartment=e},selectType(e){this.selectedType=e},selectDate(e){this.selectedDate=e},handleQuery(){const e=encodeURIComponent(this.selectedDepartment),t=encodeURIComponent(this.selectedType),o=encodeURIComponent(this.selectedDate);if(this.selectedDate&&!/^\d{4}-\d{2}-\d{2}$/.test(this.selectedDate))return void alert("请输入正确的日期格式（例如：YYYY-MM-DD）");const n=`/doctors/query?department=${e}&outpatientType=${t}&visitTime=${o}`;y.A.get(n).then((e=>{this.doctors=e.data,this.showResults=!0})).catch((e=>{console.error("Error fetching doctor info:",e),e.response?alert("查询失败，请稍后重试。错误信息："+e.response.data):alert("网络连接异常，请检查网络后重试。")}))},generateDates(e){const t=[],o=new Date;for(let n=0;n<e;n++){const e=new Date(o);e.setDate(o.getDate()+n);const s=e.getFullYear(),a=(e.getMonth()+1).toString().padStart(2,"0"),r=e.getDate().toString().padStart(2,"0");t.push(`${s}-${a}-${r}`)}return t}}};const Q=(0,A.A)(F,[["render",g],["__scopeId","data-v-ee383a78"]]);var R=Q}}]);
//# sourceMappingURL=141.a6d843b5.js.map